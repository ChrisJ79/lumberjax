
SendGrid API:

API KEY = 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

curl -X POST https://api.sendgrid.com/api/mail.send.json \
     -H "Authorization: Bearer SENDGRID_APIKEY" \
     -d "to=test@sendgrid.com" \
     -d "from=you@youraddress.com" \
     -d "subject=Sending with SendGrid is Fun" \
     -d "html=and easy to do anywhere, even with cURL"






     <<<<<<<<<<< THE REAL EMAIL-CONTROLLER.JS CODE: >>>>>>>>>>>

     // 1) npm install nodemailer
     // 2) Cre­at­e a trans­port object in route handler.
     var nodemailer = require('nodemailer');
     var dotenv = require('dotenv').config();
     var fs = require('fs');

     module.exports = {
         emailToLumberYard: emailToLumberYard
     }

     function emailToLumberYard(req, res) {

       console.log("The req body" ,req.body)
       var file = fs.readFileSync(__dirname + '/../public/html/email.html', 'utf8');
       console.log("File contents: ", file);

         var transporter = nodemailer.createTransport({
             service: 'mail.com',
             auth: {
                 user: 'ljquotemail@mail.com', // Your email id
                 pass: 'Jaxmailer888'//process.env.emailPW // Your password
             }
         });

         var mailOptions = {
             from: req.body.email, // sender address
             to: 'csjohnson79@icloud.com', // list of receivers
             subject: 'You Have A New Quote Request!! ' +req.body.email, // Subject line
             //text: file //req.body.message,
             html: file
         };

         transporter.sendMail(mailOptions, function(error, info){
         if(error){
             console.log(error);
             res.json({yo: 'error'});
         }else{
             console.log('Message sent: ' + info.response);
             res.json({yo: info.response});
         };
     });

     }

     // function emailToBuilder(req, res) {};










     // var express = require('express');
     //
     // //step1 -- done
     // var nodemailer = require('nodemailer');
     // var dotenv = require('dotenv').config();
     //
     // //step2
     // var router = express.Router();
     // app.use('/sayHello', router);
     // router.post('/', handleSayHello); // handle the route at yourdomain.com/sayHello (Site Needs to be deployed first??)
     //
     // function handleSayHello(req, res) {
     //     var transporter = nodemailer.createTransport({
     //         service: 'gmail',
     //         auth: {
     //             user: 'cjohnsonswp@gmail.com', // Your email id
     //             pass: process.env.timberPW // Your password (Email password)
     //         }
     //     });
     //
     // }

     //step3
     // var text = 'Hello world from Chris!' + req.body.name;


     //step4
     // var mailOptions = {
     //     from: 'cjohnsonswp@gmail.com', // sender address
     //     to: 'csjohnson79@icloud.com', // list of receivers
     //     subject: 'You have a new email...  A new LumberJax quote awaits!', // Subject line
     //     text: text //, // plaintext body
     //     // html: '<b>Hello world ✔</b>' // You can choose to send an HTML body instead
     // };


     //step5 -- The moment of glory!!  Actually send the email and handle the response.
     // transporter.sendMail(mailOptions, function(error, info){
     //     if(error){
     //         console.log(error);
     //         res.json({yo: 'error'});
     //     }else{
     //         console.log('Message sent: ' + info.response);
     //         res.json({yo: info.response});
     //     }
     // });


     // Functionality to turn index.html(s) into PDFs??, and put into an email (in a specified email.html, as a link ) to a particular email address....



<<<<<<<<<<< THE sendgrid node.js CODE: >>>>>>>>>>>



// using SendGrid's v3 Node.js Library
// https://github.com/sendgrid/sendgrid-nodejs
var helper = require('sendgrid').mail;

from_email = new helper.Email("@example.com");
to_email = new helper.Email("csjohnson79@icloud.com");
subject = "Sending with SendGrid is Fun";
content = new helper.Content("text/plain", "and easy to do anywhere, even with Node.js");
email = new helper.Mail(from_email, subject, to_email, content);

var sg = require('sendgrid')(process.env.SG.6IpIIbnkSzuRRaT0iwCTBg);
var request = sg.emptyRequest({
  method: 'POST',
  path: '/v3/mail/send',
  body: mail.toJSON()
});

sg.API(request, function(error, response) {
  console.log(response.statusCode);
  console.log(response.body);
  console.log(response.headers);
})



---------- GOOGLE API STUFF ----------

https://developers.google.com/oauthplayground

CLIENT ID = 242606568864-lfgs8o98gbil7gl99cohcn0itppmtesp.apps.googleusercontent.com

CLIENT SECRET = PWMsy2DEpvqJ9Y3ZMR_F6FCK

AUTHORIZATION CODE = 4/YJPgy0F_ZZX9zciJEyybOr5FmA1TPHktdmdTiHrU22s

REFRESH TOKEN = qretAxYlSi_LKuSdlapdZHg0jaKyNE5fyyj5xOc6eig

ACCESS TOKEN = ya29.Ci-kAxCmDyhtRXJTmlIPfz1kjT-fx6JzZ7MwF4-vJZ9OmwdDWrCvqTrXEedj1CDbUw


--CODE:


var nodemailer = require("nodemailer");

var smtpTransport = nodemailer.createTransport("SMTP", {
  service: "Gmail",
  auth: {
    XOAuth2: {
      user: "cjohnsonswp@gmail.com", // Your gmail address.
                                            // Not @developer.gserviceaccount.com
      clientId: "242606568864-lfgs8o98gbil7gl99cohcn0itppmtesp.apps.googleusercontent.com",
      clientSecret: "PWMsy2DEpvqJ9Y3ZMR_F6FCK",
      refreshToken: "qretAxYlSi_LKuSdlapdZHg0jaKyNE5fyyj5xOc6eig"
    }
  }
});

var mailOptions = {
  from: "cjohnsonswp@gmail.com",
  to: "csjohnson79@icloud.com",
  subject: "Hello",
  generateTextFromHTML: true,
  html: "<b>Hello world</b>"
};

smtpTransport.sendMail(mailOptions, function(error, response) {
  if (error) {
    console.log(error);
  } else {
    console.log(response);
  }
  smtpTransport.close();
});



//SET THE SERVICE PROVIDER TO SEND EMAILS
var smtpTransport = nodemailer.createTransport('SMTP', {
    service: 'Yahoo',
    auth: {
        user: 'jeromeaking40',
        pass: 'xxxxx'
    }
});
var mailOptions = {
    to: user.email,
    from: 'jeromeaking40@yahoo.com',
    subject: 'CoffeeCafe Password Reset',
    text: 'You are receiving this because you (or someone else) have requested the reset of the password for your account.\n\n' + 'Please click on the following link, or paste this into your browser to complete the process:\n\n' + 'http://' + req.headers.host + '/reset/' + token + '\n\n' + 'If you did not request this, please ignore this email and your password will remain unchanged.\n'
};
smtpTransport.sendMail(mailOptions, function(error, res) {
    if (error) {
        console.log(error);
    }
    console.log(res);
});
}
